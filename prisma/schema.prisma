generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      ="postgresql://postgres:postgres@localhost:5432/e-commerce-db?schema=public"
}

// User model
model User {
  id            String      @id @default(uuid())
  username      String      @unique
  address       String?
  email         String      @unique
  password      String
  is_active      Boolean?    @default(true)
  role          Int        @default(1)
  created_at    DateTime @default(now())    @db.Timestamptz(6)
  updated_at    DateTime @updatedAt         @db.Timestamptz(6)
  deleted_at    DateTime?

  @@map("user")

  orders Order[] 
}

// Product model
model Product {
  id           String       @id @default(uuid())
  name         String       @unique
  description  String
  price       Float
  stock        Int  
  is_active    Boolean @default(true)
  created_at  DateTime @default(now()) @db.Timestamptz(6)
  updated_at  DateTime @updatedAt @db.Timestamptz(6)
  deleted_at  DateTime?

  @@map("product")

  ProductOrder ProductOrder[] 
}

model Order {
  id           String          @id @default(uuid())
  user         User         @relation(fields: [user_id], references: [id])
  user_id      String
  total_price  Float
  address      String?
  order_type   OrderType
  order_state  OrderState?
  created_at    DateTime @default(now()) @db.Timestamptz(6)
  updated_at    DateTime @updatedAt @db.Timestamptz(6)
  deleted_at    DateTime?

  @@map("order")
  @@index([user_id]) //IMPORTANTE: creacion de indices sobre la columna user_id
  ProductOrder ProductOrder[] 
}

enum OrderType {
  pickup
  delivery
}
enum OrderState {
  PENDIENTE
  EN_PROCESO
  FINALIZADO
  CANCELADO
}

model ProductOrder {
  order_id     String      
  product_id   String   
  quantity     Int
  subtotal     Float

  @@id([order_id, product_id])
  @@map("product_orders")

  orden Order  @relation(fields: [order_id], references: [id])
  producto Product @relation(fields: [product_id], references: [id])
}